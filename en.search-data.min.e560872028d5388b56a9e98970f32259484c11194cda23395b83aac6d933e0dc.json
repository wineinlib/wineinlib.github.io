[{"id":0,"href":"/posts/generate-and-deploy-website/","title":"Generate and deploy website","section":"Blog","content":"Generate static website using Hugo #  prepare Hugo #  download binary or use a package management system\ncreate repo and add theme #  hugo new site my-blog # version control for original blog content git init # add theme repo as submodule git add submodule https://github.com/alex-shpak/hugo-book themes/hugo-book configuration #  baseURL = \u0026#39;https://wineinlib.github.io\u0026#39; languageCode = \u0026#39;en-us\u0026#39; title = \u0026#39;et cetera\u0026#39; theme = \u0026#39;hugo-book\u0026#39; # (Optional) Set this to true to enable \u0026#39;Last Modified by\u0026#39; date and git author # information on \u0026#39;doc\u0026#39; type pages. enableGitInfo = true [params] # (Optional, default light) Sets color theme: light, dark or auto. # Theme \u0026#39;auto\u0026#39; switches between dark and light modes based on browser/os preferences BookTheme = \u0026#39;light\u0026#39; # (Optional, default true) Controls table of contents visibility on right side of pages. # Start and end levels can be controlled with markup.tableOfContents setting. # You can also specify this parameter per page in front matter. BookToC = true # Set source repository location. # Used for \u0026#39;Last Modified\u0026#39; and \u0026#39;Edit this page\u0026#39; links. BookRepo = \u0026#39;https://github.com/wineinlib/wineinlib.github.io\u0026#39; generate static site code #  # for local debug hugo server # generate static website code hugo # version control for website code cd public/ git init issues #   run hugo binary in CentOS 7 reports  hugo: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.20' not found (required by hugo)\rhugo: /lib64/libstdc++.so.6: version `CXXABI_1.3.8' not found (required by hugo)\rhugo: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.21' not found (required by hugo)\rroot cause: libstdc++.so.6 version incompatible solution: update libstdc++.so.6\nref: https://www.cnblogs.com/Jerryshome/p/15190252.html\nrun hugo on Windows reports  Error: Error building site: \u0026quot;\\content\\_index.md:8:1\u0026quot;: failed to extract shortcode: template for shortcode \u0026quot;columns\u0026quot; not found\rroot cause: submodule not present solution: git submodule update --init --recursive note: the error is kind of misleading\nDeploy website with Github Pages #    create public repo for github pages, github.com/wineinlib/wineinlib.github.io in my case\n  push website code to the repo\n  configure the repo\n  Deploy website with Gitlab Pages #  configuration #  example: https://gitlab.com/pages/hugo\n# .gitlab-ci.yml # All available Hugo versions are listed here: https://gitlab.com/pages/hugo/container_registry image: registry.gitlab.com/pages/hugo/hugo_extended:latest  # use hugo_extened, depending on the theme used variables: GIT_SUBMODULE_STRATEGY: recursive test: before_script: - apk add --update --no-cache git script: - hugo except: - master pages: before_script: - apk add --update --no-cache git # absent in example script: - hugo artifacts: paths: - public only: - master "},{"id":1,"href":"/docs/tools/git/","title":"git","section":"Tools","content":"submodule #  # add submodule git submodule add https://github.com/wineinlib/wineinlib.github.io.git public # sync git submodule update --init --recursive # remove rm -rf public rm -rf .git/modules/public git rm --cached public "},{"id":2,"href":"/docs/golang/golang-notes/","title":"golang notes","section":"Golang","content":"execute commands in golang #  exec.Command() "},{"id":3,"href":"/docs/kubernetes/scheduler/","title":"kube-scheduler","section":"Kubernetes","content":"usage #  "},{"id":4,"href":"/docs/kubernetes/kubectl/","title":"kubectl","section":"Kubernetes","content":"usage #  "},{"id":5,"href":"/docs/linux/commands/","title":"linux commands","section":"Linux","content":"ssh #  # specify port ssh -p 2200 scp #  sshpass #  "},{"id":6,"href":"/docs/linux/linux-notes/","title":"linux notes","section":"Linux","content":"init system #  Ubuntu: use Systemd as default since 15.04 use upstart before\n# check init system used if which systemctl \u0026amp;\u0026gt;/dev/null then echo \u0026#34;init system: systemd\u0026#34; elif [[ \u0026#34;`ps -p1 | grep systemd \u0026amp;\u0026amp; echo systemd || echo upstart`\u0026#34; = \u0026#34;upstart\u0026#34; ]] then echo \u0026#34;init system: upstart\u0026#34; else echo \u0026#34;init system not supported (upstart and systemd supported)\u0026#34; exit 1 fi systemd #  upstart #  description \u0026quot;my-app\u0026quot;\rrespawn\rconsole output\rchdir ${app-dir}\rexec ${app-dir}/my-app --port=${port}\r"},{"id":7,"href":"/docs/tools/rsync/","title":"rsync","section":"Tools","content":"user and group mapping #  rsync --numeric-ids --usermap=\u0026#34;0:1000000,10:1000010\u0026#34; --groupmap=\u0026#34;0:1000000,10:1000010\u0026#34; ... rsync over ssh #  rsync -e \u0026#39;ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no\u0026#39; ... "},{"id":8,"href":"/docs/kubernetes/","title":"Kubernetes","section":"Docs","content":"Linux #   Introduction #  Contents related to Linux.\n"},{"id":9,"href":"/docs/tools/","title":"Tools","section":"Docs","content":"Tools #   "}]